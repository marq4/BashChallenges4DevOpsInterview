* Find all ocurrences of a Word(s) in a folder, ignoring case, nice coloring:
	+ grep -EiRw --color=auto Systems? /etc/ 					// Global-REgex-Print, Extended Regex patterns, ignore case, Recursive, Match whole word, optional s. 

* Handle 2 optional arguments: 
	+ first="default value"
	+ second="default value"
	+ function main {
		if [[ $# -ge 1 ]]; then
			if [[ $# -ge 2 ]]; then
				second=$2
			fi
			first=$1
		fi
	}
	+ main "$@" 

* Read last N lines from file along with their line numbers: 
	+ tail -10 myfile.txt | nl 

* Check if var num is a valid int: 
	+ numregex='^[0-9]+$' 							// ^: Beginning, [0-9]: Character class of digits from 0 to 9, +: One or more, $: End. 
	+ if ! [[ $num =~ $numregex ]] 

* Display the natural numbers from 0 to var target: 
	+ for num in $(seq 0 "$target"); do
		echo $num 
	    done 

* Redirect all output of a function to a file: 
	+ function_name $arg &> "out.txt" 

* Display text with new lines: 
	+ echo -e "$var \n" 

* Strip a string from trailing and leading whitespace: 
	+ echo $var | xargs 

* Check if a string is empty: 
	+ -z 

* Check if file exists: 
	+ -f 

* Read lines from a file until a non-empty line is found:
	+ while read line 
	    do 
		line=$(echo $line | xargs) 
		if [[ -z $line ]]; then
		then 
			continue
		else 
			echo $line 
			return 
		fi 
	   done < $file 

* Read a file in reverse order: 
	+ tac $file 

* Print line number $line from $file: 
	+ sed --silent "${line}p" $file 

* Create a log file with 85 SUC lines: 
	+ for line in {0..84}; do echo SUC; done > suc.log 

* TR:
	+ Remove all []: 			tr -d '[]' 

* SED: 
	+ Beginning of line: 		^ 
	+ Capture group: 			() 	\1 \2 ...
	+ Match word: 			[^ ]+ 
	+ Match space(s): 			[ ]+ 
	+ Match '[' ']' 			\[\]
	+ Add text to captured word: 		\1\2#mytext#\3 

* FIND (-EXEC): 
	+ Find filaname.txt among current subdirs: 		find . -name "filename.txt" 
	+ Find file containing text: 				find . -name "*.txt" -exec grep -li "my text" {} +						// Find here, any text file that contains "my text" ignore case, placeholder, placeholder for the results of find, terminate command: concat result and run executed command only once. 
	+ Find FILENAME.txt case insensitive: 			find . -iname "FILANAME.txt" 
	+ Find files with size greater than 1GB: 			sudo find / -size +1G 
	+ Remove execute and write perms for others 
		in all text files under here: 			sudo find . -type f -name "*.txt" -exec echo chmod o-wx {} \;					// echo is for dry run. Escaped ; is to execute command once for each file found. 
	+ Display lines containing 
		the word System(s), case-insensitive: 		sudo find / -type f -exec grep -EInHiw Systems? {} \; 2>/dev/null | less				// I: Ignore binary files, n: display line number, H: path, System or systems. 
	+ Get owner of files containing text: 			find . -type f -exec grep -EiHIl Systems? {} \; -exec ls -l {} \; | cut -d' ' -f3 
	+ Change owner & group of files containing text: 		sudo find . -type f -exec grep -EiIHl Systems? {} \; -exec chown root {} \; -exec chgrp root {} \; 	
	+ Find all .log files that can also be named .log.0, 
		.log.1, ..., and may be hidden: 			find . -type f -regex '.?*log.?[0-9]+?' 
		- Now see owner, group, path: 		find . -type f -regex '.?*log.?[0-9]+?' -exec ls -l {} \; | cut -d' ' -f3,4,10 
		- Now see size: 				find . -type f -regex '.?*log.?[0-9]+?' -exec ls -lh {} \; | cut -d' ' -f5,10 
		- Now remove all really long logs, prompt: 	find . -type f -regex '.?*log.?[0-9]+?' -size +500M -ok rm {} \;	
		- Now see logs only owened by log: 		find . -type f -regex '.?*log.?[0-9]+?' -user root 

* XARGS: 
	+ 


